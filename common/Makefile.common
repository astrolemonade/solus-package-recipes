SHELL = /bin/bash
TOPLVL = "../."

SPECFILE = $(shell if [ -f package.yml ]; then echo "package.yml"; else echo "pspec.xml"; fi; )
SPECFILE2 = $(shell if [ -f pspec_x86_64.xml ]; then echo "pspec_x86_64.xml"; else echo "pspec.xml"; fi; )
TAG=$(shell $(TOPLVL)/common/Scripts/gettag.py $(SPECFILE))
SOURCE=$(shell basename $(shell dirname $(abspath $(SPECFILE))))
SIGNTAG=$(shell if [ "$(git config commit.gpgsign)" == "true" ]; then echo "-s"; else echo " "; fi; )

complete:
	make build

abireport:
	$(TOPLVL)/common/Go/yabi/yabi *.eopkg

build-stable:
	sudo solbuild build $(SPECFILE) -p main-x86_64;
	@echo "=========================================================================="
	@echo "WARNING: This package was built against -stable and is for local use only."
	@echo "                                                                          "
	@echo "         Do NOT publish packages or Differentials built against -stable!!!"
	@echo "=========================================================================="

build:
	sudo solbuild build $(SPECFILE) -p unstable-x86_64;

tram:
	sudo solbuild --transit-manifest unstable build $(SPECFILE) -p unstable-x86_64;

local:
	sudo solbuild build $(SPECFILE) -p local-unstable-x86_64;

cvecheck:
	cve-check-tool $(SPECFILE2) -M $(TOPLVL)/common/mapping -o report.html; \

bump:
	if [[ -e package.yml ]]; then \
		python /usr/share/ypkg/ybump.py package.yml; \
	else \
		$(TOPLVL)/common/Scripts/pbump.py pspec.xml; \
	fi;

convert:
	$(TOPLVL)/common/Scripts/yconvert.py pspec.xml;

clean:
	if [[ `ls *.eopkg` ]]; then \
		rm *.eopkg -fv;  \
	fi;

pull:
	git pull --rebase

publish:
	$(TOPLVL)/common/Scripts/package-publish-safety-catches.sh
	@if [[ `git symbolic-ref HEAD 2>/dev/null` = "refs/heads/master" && `git tag` != *$(TAG)* ]]; then \
		git tag $(SIGNTAG) -a -m "Publish $(TAG)" $(TAG); \
		git push --follow-tags; \
		ssh -4 -p 798 build@getsol.us build "$(SOURCE)" "$(TAG)"; \
	else \
		echo "Error: Cannot publish, either not on the master branch or the tag already exists."; \
	fi;

republish:
	ssh -4 -p 798 build@getsol.us build "$(SOURCE)" "$(TAG)"

switch-domains:
	go run $(TOPLVL)/common/Go/switch_repo_domains.go

notify-complete:
	$(TOPLVL)/common/Scripts/buildserver-notification.sh

help:
	@echo "build           - Build the current package against the unstable repo"
	@echo "build-stable    - Build the current package against the stable repo (do NOT use for official submissions!)"
	@echo "tram            - Build the current package against the unstable-x86-64 profile and generate a solbuild transit manifest"
	@echo "bump            - Bump current release"
	@echo "convert         - Convert pspec to package.yml"
	@echo "cvecheck        - Check package for CVEs"
	@echo "clean           - Clean current tree"
	@echo "republish       - Rebuild existing tag"
	@echo "publish         - Tag and publish a release"
	@echo "pull            - Pull/rebase latest changes"
	@echo "notify-complete - Get a notification when the build has finished on the buildserver"
	@echo "switch-domains  - Update local repositories to use correct hostname"

.PHONY:
	complete
